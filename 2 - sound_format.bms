set REV 0
idstring \x02\x08\x00\x00
get FSIZE long
get DUMMY long # 0x3700021c

idstring \x03\x08\x00\x00
get HSIZE long
	xmath OFFSET "HSIZE + 0x24"
get DUMMY short # 0xffff
get CODE short
get UNK long
get FREQ long
if FREQ > 44100
	reverselong FREQ
	endian big
	set REV 1
endif
get UNK long
get SIZE long
get BITS byte
get CH byte
goto 0x88
get NAME string

if BITS = 4
	string NAME -= 4
	if CH != 1
		print "ERROR: stereo stream!"
		#cleanexit
	endif
	callfunction VAG 1
else # 0x1803 or 0x2c03 => PCM
	set CODEC 1
	set BLOCKALIGN 2
	callfunction PCM 1
endif

startfunction VAG
	xmath PSIZE "SIZE + 0x30"
	putVarChr MEMORY_FILE PSIZE 0
	log MEMORY_FILE 0 0
	set MEMORY_FILE binary "\x56\x41\x47\x70\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x04\x50\x00\x00\x22\x56\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
	append
	log MEMORY_FILE OFFSET SIZE
	append
	reverselong SIZE
	reverselong FREQ
	putVarChr MEMORY_FILE 0xc SIZE long
	putVarChr MEMORY_FILE 0x10 FREQ long
	string NAME += ".vag"
	get SIZE asize MEMORY_FILE
	log NAME 0 SIZE MEMORY_FILE
endfunction

startfunction PCM
	endian little
	set PRE SIZE
	math PRE += 0x2c
	putVarChr MEMORY_FILE PRE 0
	log MEMORY_FILE 0 0
	set MEMORY_FILE binary "\x52\x49\x46\x46\x20\xC0\xB1\x00\x57\x41\x56\x45\x66\x6D\x74\x20\x10\x00\x00\x00\x01\x00\x02\x00\x44\xAC\x00\x00\x10\xB1\x02\x00\x04\x00\x10\x00\x64\x61\x74\x61\xFC\xBF\xB1\x00"
	append
	log MEMORY_FILE OFFSET SIZE
	append

	set RIFFSIZE SIZE
	math RIFFSIZE += 36
	set AVGBYTES FREQ
	if CODEC != 2
		math AVGBYTES *= BLOCKALIGN
	endif
	
	putvarchr MEMORY_FILE 0x04 RIFFSIZE long
	putvarchr MEMORY_FILE 0x14 CODEC short          # wFormatTag: Microsoft PCM Format (0x0001)
	putvarchr MEMORY_FILE 0x16 CH short   # wChannels
	putvarchr MEMORY_FILE 0x18 FREQ short   # dwSamplesPerSec
	putvarchr MEMORY_FILE 0x1c AVGBYTES long    # dwAvgBytesPerSec
	putvarchr MEMORY_FILE 0x20 BLOCKALIGN short # wBlockAlign
	putvarchr MEMORY_FILE 0x22 BITS short       # wBitsPerSample
	putvarchr MEMORY_FILE 0x28 SIZE long
	if NAME == ""
		get NAME basename
		if CODEC == 2
			string NAME += ".lwav"
		else
			string NAME += ".wav"
		endif
	endif
	get SIZE asize MEMORY_FILE
	if REV = 1
		set OFFSET 0x2c
		xmath LOOPS "(SIZE - OFFSET)/2"
		goto OFFSET MEMORY_FILE
		append
		for i = 1 <= LOOPS
			get WRITE short MEMORY_FILE
			reverseShort WRITE
			putVarChr MEMORY_FILE OFFSET WRITE short
			math OFFSET += 2
		next i
		append
	endif
	
	log NAME 0 SIZE MEMORY_FILE
endfunction